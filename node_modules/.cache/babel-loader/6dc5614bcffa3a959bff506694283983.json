{"ast":null,"code":"var _jsxFileName = \"/Users/melissa/cs91r/src/components/Navbar.js\";\n\n/** @jsx jsx */\nimport { Component } from 'react';\nimport { jsx, css } from '@emotion/core';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { MDCTopAppBar } from '@material/top-app-bar';\nimport { MaterialIcon } from '@material-ui/icons';\nconst navbarStyle = css`\n  .Navigation {\n    display: flex;\n    flex-direction: column;\n    align-items: right;\n    color: #515151;\n    position: relative;\n    overflow: auto;\n    padding: 4em;\n\n    .link {\n      margin-bottom: 10px;\n      position: relative;\n      cursor: pointer;\n      line-height: 27px;\n      letter-spacing: 0.1em;\n      color: #ffffff;\n      text-decoration: none;\n    }\n\n    a {\n      color: #000000;\n      font-size: 16px;\n      text-decoration: none;\n      letter-spacing: 0.1em;\n\n      &:hover {\n        text-decoration: none;\n      }\n    }\n\n    .profile-photo {\n      max-width: 100px;\n    }\n\n    .Highlight {\n      a {\n        font-size: 16px;\n        color: #77bbdd;\n      }\n    }\n\n    .mobile {\n      display: inline-block;\n    }\n  }\n`;\n\nconst renderLink = (link, path) => {\n  const highlight = link.to !== '/' ? path.includes(link.to) : path === '/';\n  return jsx(\"div\", {\n    key: link.text,\n    className: 'link' + (highlight ? ' Highlight' : ''),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, jsx(Link, {\n    to: link.to,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, link.text));\n};\n\nexport default class Navbar extends Component {\n  renderLinks() {\n    const _this$props = this.props,\n          links = _this$props.links,\n          pathname = _this$props.pathname;\n    var parts = pathname.split('/');\n    var path = '/' + parts[1] + (parts[2] ? '/' + parts[2] : '');\n    return jsx(\"div\", {\n      className: \"links\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, links.map(link => {\n      return renderLink(link, path);\n    }));\n  }\n\n  renderMobile() {\n    return jsx(\"div\", {\n      css: navbarStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, jsx(\"div\", {\n      className: \"Navigation mobile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, jsx(\"div\", {\n      className: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Voting Methods\")), jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.renderLinks())));\n  }\n\n  renderSide() {\n    return jsx(\"div\", {\n      css: navbarStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, jsx(\"div\", {\n      className: \"Navigation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, jsx(\"div\", {\n      className: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Voting Methods\")), this.renderLinks()));\n  }\n\n  realRender() {\n    const mobile = this.props.mobile;\n    return jsx(\"div\", {\n      css: navbarStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, mobile ? this.renderMobile() : this.renderSide());\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          links = _this$props2.links,\n          path = _this$props2.path;\n    return jsx(MDCTopAppBar, {\n      title: \"Voting Methods\" // navigationIcon={<MaterialIcon\n      //   icon='menu'\n      //   onClick={() => console.log('click')}\n      // />}\n      ,\n      actionItems: links.map(link => {\n        return renderLink(link, path);\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    });\n  }\n\n}\nNavbar.propTypes = {\n  links: PropTypes.arrayOf(PropTypes.shape({\n    icon: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n    to: PropTypes.string.isRequired\n  })).isRequired,\n  pathname: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/Users/melissa/cs91r/src/components/Navbar.js"],"names":["Component","jsx","css","Link","PropTypes","MDCTopAppBar","MaterialIcon","navbarStyle","renderLink","link","path","highlight","to","includes","text","Navbar","renderLinks","props","links","pathname","parts","split","map","renderMobile","renderSide","realRender","mobile","render","propTypes","arrayOf","shape","icon","string","isRequired"],"mappings":"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","sourcesContent":["/** @jsx jsx */\n\nimport { Component } from 'react';\nimport { jsx, css } from '@emotion/core';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { MDCTopAppBar } from '@material/top-app-bar';\nimport { MaterialIcon } from '@material-ui/icons';\n\n\nconst navbarStyle = css`\n  .Navigation {\n    display: flex;\n    flex-direction: column;\n    align-items: right;\n    color: #515151;\n    position: relative;\n    overflow: auto;\n    padding: 4em;\n\n    .link {\n      margin-bottom: 10px;\n      position: relative;\n      cursor: pointer;\n      line-height: 27px;\n      letter-spacing: 0.1em;\n      color: #ffffff;\n      text-decoration: none;\n    }\n\n    a {\n      color: #000000;\n      font-size: 16px;\n      text-decoration: none;\n      letter-spacing: 0.1em;\n\n      &:hover {\n        text-decoration: none;\n      }\n    }\n\n    .profile-photo {\n      max-width: 100px;\n    }\n\n    .Highlight {\n      a {\n        font-size: 16px;\n        color: #77bbdd;\n      }\n    }\n\n    .mobile {\n      display: inline-block;\n    }\n  }\n`;\n\nconst renderLink = (link, path) => {\n  const highlight = link.to !== '/' ? path.includes(link.to) : path === '/';\n  return (\n    <div key={link.text} className={'link' + (highlight ? ' Highlight' : '')}>\n      <Link to={link.to}>{link.text}</Link>\n    </div>\n  );\n};\n\nexport default class Navbar extends Component {\n  renderLinks() {\n    const { links, pathname } = this.props;\n\n    var parts = pathname.split('/');\n    var path = '/' + parts[1] + (parts[2] ? '/' + parts[2] : '');\n\n    return (\n      <div className=\"links\">\n        {links.map(link => {\n          return renderLink(link, path);\n        })}\n      </div>\n    );\n  }\n\n  renderMobile() {\n    return (\n      <div css={navbarStyle}>\n        <div className=\"Navigation mobile\">\n          <div className=\"logo\">\n            <h1>\n              Voting Methods\n            </h1>\n          </div>\n          <div>{this.renderLinks()}</div>\n        </div>\n      </div>\n    );\n  }\n\n  renderSide() {\n    return (\n      <div css={navbarStyle}>\n        <div className=\"Navigation\">\n          <div className=\"logo\">\n            <h1>\n              Voting Methods\n            </h1>\n          </div>\n          {this.renderLinks()}\n        </div>\n      </div>\n    );\n  }\n\n  realRender() {\n    const { mobile } = this.props;\n    return (\n      <div css={navbarStyle}>\n        {mobile ? this.renderMobile() : this.renderSide()}\n      </div>\n    );\n  }\n\n  render() {\n    const { links, path } = this.props;\n    return (\n      <MDCTopAppBar\n        title='Voting Methods'\n        // navigationIcon={<MaterialIcon\n        //   icon='menu'\n        //   onClick={() => console.log('click')}\n        // />}\n        actionItems={\n          links.map(link => {\n            return renderLink(link, path);\n          })\n        }\n      />  \n    )\n  }\n}\n\nNavbar.propTypes = {\n  links: PropTypes.arrayOf(\n    PropTypes.shape({\n      icon: PropTypes.string.isRequired,\n      text: PropTypes.string.isRequired,\n      to: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  pathname: PropTypes.string.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}