{"ast":null,"code":"var _jsxFileName = \"/Users/melissa/portfolio/src/components/PhotoGallery.js\";\n\n/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\nimport React, { useState, useCallback } from 'react';\nimport { render } from 'react-dom';\nimport Gallery from 'react-photo-gallery';\nimport Carousel, { Modal, ModalGateway } from 'react-images';\n\nconst PhotoGallery = props => {\n  const {\n    photos,\n    direction\n  } = props;\n  const [currentImage, setCurrentImage] = useState(0);\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\n  const openLightbox = useCallback((event, {\n    photo,\n    index\n  }) => {\n    setCurrentImage(index);\n    setViewerIsOpen(true);\n  }, []);\n\n  const closeLightbox = () => {\n    setCurrentImage(0);\n    setViewerIsOpen(false);\n  };\n\n  return jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, jsx(Gallery, {\n    photos: photos,\n    direction: direction,\n    onClick: openLightbox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), jsx(ModalGateway, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, viewerIsOpen ? jsx(Modal, {\n    onClose: closeLightbox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, jsx(Carousel, {\n    currentIndex: currentImage,\n    views: photos.map(x => ({ ...x,\n      srcset: x.srcSet,\n      caption: x.title\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })) : null));\n};\n\nexport default PhotoGallery;","map":{"version":3,"sources":["/Users/melissa/portfolio/src/components/PhotoGallery.js"],"names":["css","jsx","React","useState","useCallback","render","Gallery","Carousel","Modal","ModalGateway","PhotoGallery","props","photos","direction","currentImage","setCurrentImage","viewerIsOpen","setViewerIsOpen","openLightbox","event","photo","index","closeLightbox","map","x","srcset","srcSet","caption","title"],"mappings":";;AAAA;AAEA,SAASA,GAAT,EAAcC,GAAd,QAAyB,eAAzB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,QAAP,IAAmBC,KAAnB,EAA0BC,YAA1B,QAA8C,cAA9C;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5B,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAwBF,KAA9B;AACA,QAAM,CAACG,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAACa,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,KAAD,CAAhD;AAEA,QAAMe,YAAY,GAAGd,WAAW,CAAC,CAACe,KAAD,EAAQ;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAR,KAA6B;AAC5DN,IAAAA,eAAe,CAACM,KAAD,CAAf;AACAJ,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GAH+B,EAG7B,EAH6B,CAAhC;;AAKA,QAAMK,aAAa,GAAG,MAAM;AAC1BP,IAAAA,eAAe,CAAC,CAAD,CAAf;AACAE,IAAAA,eAAe,CAAC,KAAD,CAAf;AACD,GAHD;;AAKA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,IAAC,OAAD;AAAS,IAAA,MAAM,EAAEL,MAAjB;AAAyB,IAAA,SAAS,EAAEC,SAApC;AAA+C,IAAA,OAAO,EAAEK,YAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,IAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,YAAY,GACX,IAAC,KAAD;AAAO,IAAA,OAAO,EAAEM,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,IAAC,QAAD;AACE,IAAA,YAAY,EAAER,YADhB;AAEE,IAAA,KAAK,EAAEF,MAAM,CAACW,GAAP,CAAWC,CAAC,KAAK,EACtB,GAAGA,CADmB;AAEtBC,MAAAA,MAAM,EAAED,CAAC,CAACE,MAFY;AAGtBC,MAAAA,OAAO,EAAEH,CAAC,CAACI;AAHW,KAAL,CAAZ,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADW,GAWT,IAZN,CAFF,CADF;AAmBD,CAlCD;;AAoCA,eAAelB,YAAf","sourcesContent":["/** @jsx jsx */\n\nimport { css, jsx } from '@emotion/core';\nimport React, { useState, useCallback } from 'react';\nimport { render } from 'react-dom';\nimport Gallery from 'react-photo-gallery';\nimport Carousel, { Modal, ModalGateway } from 'react-images';\n\nconst PhotoGallery = props => {\n  const { photos, direction } = props;\n  const [currentImage, setCurrentImage] = useState(0);\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\n\n  const openLightbox = useCallback((event, { photo, index }) => {\n    setCurrentImage(index);\n    setViewerIsOpen(true);\n  }, []);\n\n  const closeLightbox = () => {\n    setCurrentImage(0);\n    setViewerIsOpen(false);\n  };\n\n  return (\n    <div>\n      <Gallery photos={photos} direction={direction} onClick={openLightbox} />\n      <ModalGateway>\n        {viewerIsOpen ? (\n          <Modal onClose={closeLightbox}>\n            <Carousel\n              currentIndex={currentImage}\n              views={photos.map(x => ({\n                ...x,\n                srcset: x.srcSet,\n                caption: x.title,\n              }))}\n            />\n          </Modal>\n        ) : null}\n      </ModalGateway>\n    </div>\n  );\n};\n\nexport default PhotoGallery;\n"]},"metadata":{},"sourceType":"module"}