{"ast":null,"code":"var _jsxFileName = \"/Users/melissa/portfolio/src/components/Sidebar.js\";\nimport React, { Component } from 'react';\nimport { css } from '@emotion/core';\nimport ReactDom from 'react-dom';\nimport { withRouter } from 'react-router';\nimport Sidebar from 'react-sidebar';\nconst leftSidebar = 250;\nconst center = 400;\nconst sidebarStyle = css`\n  .SidebarContent {\n    text-align: left;\n    padding: 20px;\n    min-width: 300px;\n    min-height: 90%;\n    position: relative;\n\n    .Navbar {\n      position: fixed;\n      z-index: 100;\n      top: 0;\n      left: 0;\n      padding: 10px 20px;\n      // border-bottom: 1px solid rgb(243, 243, 243);\n      background: white;\n      display: flex;\n      width: 100%;\n      justify-content: space-between;\n    }\n  }\n\n  .Sidebar {\n    width: 250px;\n    text-align: right;\n    overflow: visible;\n    background-color: #AAAAAA;\n\n    a {\n      font-family: 'Apercu-light';\n      letter-spacing: 1px;\n    }\n\n    div {\n      font-family: 'Apercu-light';\n      letter-spacing: 1px;\n    }\n  }\n\n  .centered-mobile {\n    text-align: center !important;\n    align-content: center !important;\n  }\n`;\n\nclass MySidebar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: 0,\n      height: 0\n    };\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n    this.myRef = React.createRef();\n    this.state = {\n      leftSidebarOpen: false,\n      leftSidebarDocked: true,\n      transitions: false\n    };\n  }\n\n  updateWindowDimensions() {\n    this.setState(state => {\n      return {\n        width: window.innerWidth,\n        height: window.innerHeight,\n        leftSidebarDocked: window.innerWidth > leftSidebar + center,\n        leftSidebarOpen: window.innerWidth > leftSidebar + center ? false : state.leftSidebarOpen\n      };\n    });\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions);\n    this.timer = setTimeout(() => this.setState({\n      transitions: true\n    }), 100);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n    window.clearTimeout(this.timer);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.location.pathname !== prevProps.location.pathname) {\n      ReactDom.findDOMNode(this.myRef.current).scrollIntoView();\n    }\n  }\n\n  renderMobile() {\n    return React.createElement(\"div\", {\n      className: \"centered-mobile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, this.props.leftSidebar);\n  }\n\n  renderSidebarContent() {\n    const mobile = !this.state.leftSidebarDocked;\n    return React.createElement(\"div\", {\n      style: {\n        padding: mobile ? 0 : '2em',\n        minHeight: '100vh'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, mobile && this.renderMobile(), React.createElement(\"div\", {\n      style: {\n        marginTop: mobile ? 61 : 0,\n        paddingTop: mobile ? 20 : 0,\n        height: mobile ? \"calc(100% - 45px)\" : \"auto\",\n        overflowY: mobile ? 'auto' : 'hidden',\n        overflowX: 'hidden',\n        position: 'relative'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, this.props.children));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      css: sidebarStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      transitions: this.state.transitions,\n      sidebar: React.createElement(\"div\", {\n        onClick: () => this.setState({\n          leftSidebarOpen: false\n        }),\n        style: {\n          height: 'calc(100% - 30px)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, this.props.leftSidebar),\n      open: this.state.leftSidebarOpen,\n      docked: this.state.leftSidebarDocked,\n      onSetOpen: open => this.setState({\n        leftSidebarOpen: open\n      }),\n      styles: {\n        sidebar: {\n          width: leftSidebar,\n          zIndex: 201,\n          overflowY: 'auto'\n        },\n        root: {\n          width: '100%'\n        }\n      },\n      sidebarClassName: 'Sidebar',\n      shadow: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ref: this.myRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), this.renderSidebarContent()));\n  }\n\n}\n\nexport default withRouter(MySidebar);","map":{"version":3,"sources":["/Users/melissa/portfolio/src/components/Sidebar.js"],"names":["React","Component","css","ReactDom","withRouter","Sidebar","leftSidebar","center","sidebarStyle","MySidebar","constructor","props","state","width","height","updateWindowDimensions","bind","myRef","createRef","leftSidebarOpen","leftSidebarDocked","transitions","setState","window","innerWidth","innerHeight","componentDidMount","addEventListener","timer","setTimeout","componentWillUnmount","removeEventListener","clearTimeout","componentDidUpdate","prevProps","location","pathname","findDOMNode","current","scrollIntoView","renderMobile","renderSidebarContent","mobile","padding","minHeight","marginTop","paddingTop","overflowY","overflowX","position","children","render","open","sidebar","zIndex","root"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,QAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,OAAOC,OAAP,MAAoB,eAApB;AAEA,MAAMC,WAAW,GAAG,GAApB;AACA,MAAMC,MAAM,GAAG,GAAf;AAEA,MAAMC,YAAY,GAAGN,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAzB;;AA6CA,MAAMO,SAAN,SAAwBR,SAAxB,CAAkC;AAChCS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE,CAAT;AAAYC,MAAAA,MAAM,EAAE;AAApB,KAAb;AACA,SAAKC,sBAAL,GAA8B,KAAKA,sBAAL,CAA4BC,IAA5B,CAAiC,IAAjC,CAA9B;AACA,SAAKC,KAAL,GAAajB,KAAK,CAACkB,SAAN,EAAb;AACA,SAAKN,KAAL,GAAa;AACXO,MAAAA,eAAe,EAAE,KADN;AAEXC,MAAAA,iBAAiB,EAAE,IAFR;AAGXC,MAAAA,WAAW,EAAE;AAHF,KAAb;AAKD;;AAEDN,EAAAA,sBAAsB,GAAG;AACvB,SAAKO,QAAL,CAAcV,KAAK,IAAI;AACrB,aAAO;AACLC,QAAAA,KAAK,EAAEU,MAAM,CAACC,UADT;AAELV,QAAAA,MAAM,EAAES,MAAM,CAACE,WAFV;AAGLL,QAAAA,iBAAiB,EAAEG,MAAM,CAACC,UAAP,GAAoBlB,WAAW,GAAGC,MAHhD;AAILY,QAAAA,eAAe,EACbI,MAAM,CAACC,UAAP,GAAoBlB,WAAW,GAAGC,MAAlC,GACI,KADJ,GAEIK,KAAK,CAACO;AAPP,OAAP;AASD,KAVD;AAWD;;AAEDO,EAAAA,iBAAiB,GAAG;AAClB,SAAKX,sBAAL;AACAQ,IAAAA,MAAM,CAACI,gBAAP,CAAwB,QAAxB,EAAkC,KAAKZ,sBAAvC;AACA,SAAKa,KAAL,GAAaC,UAAU,CAAC,MAAM,KAAKP,QAAL,CAAc;AAAED,MAAAA,WAAW,EAAE;AAAf,KAAd,CAAP,EAA6C,GAA7C,CAAvB;AACD;;AAEDS,EAAAA,oBAAoB,GAAG;AACrBP,IAAAA,MAAM,CAACQ,mBAAP,CAA2B,QAA3B,EAAqC,KAAKhB,sBAA1C;AACAQ,IAAAA,MAAM,CAACS,YAAP,CAAoB,KAAKJ,KAAzB;AACD;;AAEDK,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,QAAI,KAAKvB,KAAL,CAAWwB,QAAX,CAAoBC,QAApB,KAAiCF,SAAS,CAACC,QAAV,CAAmBC,QAAxD,EAAkE;AAChEjC,MAAAA,QAAQ,CAACkC,WAAT,CAAqB,KAAKpB,KAAL,CAAWqB,OAAhC,EAAyCC,cAAzC;AACD;AACF;;AAEDC,EAAAA,YAAY,GAAG;AACb,WACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAK7B,KAAL,CAAWL,WADd,CADF;AAKD;;AAEDmC,EAAAA,oBAAoB,GAAG;AACrB,UAAMC,MAAM,GAAG,CAAC,KAAK9B,KAAL,CAAWQ,iBAA3B;AACA,WACE;AACE,MAAA,KAAK,EAAE;AACLuB,QAAAA,OAAO,EAAED,MAAM,GAAG,CAAH,GAAO,KADjB;AAELE,QAAAA,SAAS,EAAE;AAFN,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMGF,MAAM,IAAI,KAAKF,YAAL,EANb,EAOE;AACE,MAAA,KAAK,EAAE;AACLK,QAAAA,SAAS,EAAEH,MAAM,GAAG,EAAH,GAAQ,CADpB;AAELI,QAAAA,UAAU,EAAEJ,MAAM,GAAG,EAAH,GAAQ,CAFrB;AAGL5B,QAAAA,MAAM,EAAE4B,MAAM,GAAG,mBAAH,GAAwB,MAHjC;AAILK,QAAAA,SAAS,EAAEL,MAAM,GAAG,MAAH,GAAY,QAJxB;AAKLM,QAAAA,SAAS,EAAE,QALN;AAMLC,QAAAA,QAAQ,EAAE;AANL,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUG,KAAKtC,KAAL,CAAWuC,QAVd,CAPF,CADF;AAsBD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,GAAG,EAAE3C,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AACE,MAAA,WAAW,EAAE,KAAKI,KAAL,CAAWS,WAD1B;AAEE,MAAA,OAAO,EACL;AACE,QAAA,OAAO,EAAE,MAAM,KAAKC,QAAL,CAAc;AAAEH,UAAAA,eAAe,EAAE;AAAnB,SAAd,CADjB;AAEE,QAAA,KAAK,EAAE;AAAEL,UAAAA,MAAM,EAAE;AAAV,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIG,KAAKH,KAAL,CAAWL,WAJd,CAHJ;AAUE,MAAA,IAAI,EAAE,KAAKM,KAAL,CAAWO,eAVnB;AAWE,MAAA,MAAM,EAAE,KAAKP,KAAL,CAAWQ,iBAXrB;AAYE,MAAA,SAAS,EAAEgC,IAAI,IAAI,KAAK9B,QAAL,CAAc;AAAEH,QAAAA,eAAe,EAAEiC;AAAnB,OAAd,CAZrB;AAaE,MAAA,MAAM,EAAE;AACNC,QAAAA,OAAO,EAAE;AAAExC,UAAAA,KAAK,EAAEP,WAAT;AAAsBgD,UAAAA,MAAM,EAAE,GAA9B;AAAmCP,UAAAA,SAAS,EAAE;AAA9C,SADH;AAENQ,QAAAA,IAAI,EAAE;AAAE1C,UAAAA,KAAK,EAAE;AAAT;AAFA,OAbV;AAiBE,MAAA,gBAAgB,EAAE,SAjBpB;AAkBE,MAAA,MAAM,EAAE,KAlBV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAoBE;AAAK,MAAA,GAAG,EAAE,KAAKI,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBF,EAqBG,KAAKwB,oBAAL,EArBH,CADF,CADF;AA2BD;;AA1G+B;;AA6GlC,eAAerC,UAAU,CAACK,SAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\nimport { css } from '@emotion/core';\nimport ReactDom from 'react-dom';\nimport { withRouter } from 'react-router';\n\nimport Sidebar from 'react-sidebar';\n\nconst leftSidebar = 250;\nconst center = 400;\n\nconst sidebarStyle = css`\n  .SidebarContent {\n    text-align: left;\n    padding: 20px;\n    min-width: 300px;\n    min-height: 90%;\n    position: relative;\n\n    .Navbar {\n      position: fixed;\n      z-index: 100;\n      top: 0;\n      left: 0;\n      padding: 10px 20px;\n      // border-bottom: 1px solid rgb(243, 243, 243);\n      background: white;\n      display: flex;\n      width: 100%;\n      justify-content: space-between;\n    }\n  }\n\n  .Sidebar {\n    width: 250px;\n    text-align: right;\n    overflow: visible;\n    background-color: #AAAAAA;\n\n    a {\n      font-family: 'Apercu-light';\n      letter-spacing: 1px;\n    }\n\n    div {\n      font-family: 'Apercu-light';\n      letter-spacing: 1px;\n    }\n  }\n\n  .centered-mobile {\n    text-align: center !important;\n    align-content: center !important;\n  }\n`;\n\nclass MySidebar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { width: 0, height: 0 };\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n    this.myRef = React.createRef();\n    this.state = {\n      leftSidebarOpen: false,\n      leftSidebarDocked: true,\n      transitions: false,\n    };\n  }\n\n  updateWindowDimensions() {\n    this.setState(state => {\n      return {\n        width: window.innerWidth,\n        height: window.innerHeight,\n        leftSidebarDocked: window.innerWidth > leftSidebar + center,\n        leftSidebarOpen:\n          window.innerWidth > leftSidebar + center\n            ? false\n            : state.leftSidebarOpen,\n      };\n    });\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions);\n    this.timer = setTimeout(() => this.setState({ transitions: true }), 100);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n    window.clearTimeout(this.timer);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.location.pathname !== prevProps.location.pathname) {\n      ReactDom.findDOMNode(this.myRef.current).scrollIntoView();\n    }\n  }\n\n  renderMobile() {\n    return (\n      <div className=\"centered-mobile\">\n        {this.props.leftSidebar}\n      </div>\n    );\n  }\n\n  renderSidebarContent() {\n    const mobile = !this.state.leftSidebarDocked;\n    return (\n      <div\n        style={{\n          padding: mobile ? 0 : '2em',\n          minHeight: '100vh',\n        }}\n      >\n        {mobile && this.renderMobile()}\n        <div\n          style={{\n            marginTop: mobile ? 61 : 0,\n            paddingTop: mobile ? 20 : 0,\n            height: mobile ? \"calc(100% - 45px)\": \"auto\",\n            overflowY: mobile ? 'auto' : 'hidden',\n            overflowX: 'hidden',\n            position: 'relative',\n          }}\n        >\n          {this.props.children}\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div css={sidebarStyle}>\n        <Sidebar\n          transitions={this.state.transitions}\n          sidebar={\n            <div\n              onClick={() => this.setState({ leftSidebarOpen: false })}\n              style={{ height: 'calc(100% - 30px)' }}\n            >\n              {this.props.leftSidebar}\n            </div>\n          }\n          open={this.state.leftSidebarOpen}\n          docked={this.state.leftSidebarDocked}\n          onSetOpen={open => this.setState({ leftSidebarOpen: open })}\n          styles={{\n            sidebar: { width: leftSidebar, zIndex: 201, overflowY: 'auto' },\n            root: { width: '100%' },\n          }}\n          sidebarClassName={'Sidebar'}\n          shadow={false}\n        >\n          <div ref={this.myRef} />\n          {this.renderSidebarContent()}\n        </Sidebar>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(MySidebar);"]},"metadata":{},"sourceType":"module"}